Building the mediapipe extractor on AWS instance (Ubuntu 18)

1.	sudo apt update
2.	sudo apt install python3-pip
3.	pip3 install tensorflow
4.	git clone https://github.com/google/mediapipe.git
5.	mkdir /tmp/mediapipe
6.	cd /tmp/mediapipe
7.	curl -O http://data.yt8m.org/pca_matrix_data/inception3_mean_matrix_data.pb
8.	curl -O http://data.yt8m.org/pca_matrix_data/inception3_projection_matrix_data.pb
9.	curl -O http://data.yt8m.org/pca_matrix_data/vggish_mean_matrix_data.pb
10.	curl -O http://data.yt8m.org/pca_matrix_data/vggish_projection_matrix_data.pb
11.	curl -O http://download.tensorflow.org/models/image/imagenet/inception-2015-12-05.tgz
12.	tar -xvf /tmp/mediapipe/inception-2015-12-05.tgz
13.	cd mediapipe/
14.	python3 -m mediapipe.examples.desktop.youtube8m.generate_vggish_frozen_graph
15.	python3 -m mediapipe.examples.desktop.youtube8m.generate_input_sequence_example   --path_to_input_video=/home/ubuntu/sample_video.mp4
16.	cd (go to home)
17.	sudo apt-get install curl
18.	curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
19.	sudo apt-get update && sudo apt-get install bazel
20.	cd mediapipe/
21.	chmod +x ./setup_opencv.sh
22.	chmod 700 /home/ubuntu/sample_video.MP4
23.	./bazel-bin/mediapipe/examples/desktop/youtube8m/extract_yt8m_features --calculator_graph_config_file=mediapipe/graphs/youtube8m/feature_extraction.pbtxt --input_side_packets=input_sequence_example=/tmp/mediapipe/metadata.tfrecord --output_side_packets=output_sequence_example=/tmp/mediapipe/output.tfrecord
24.	If it fails for any reason try running python3 -m mediapipe.examples.desktop.youtube8m.generate_input_sequence_example   --path_to_input_video=/home/ubuntu/sample_video.MP4
    And then running the ./bazel â€¦ executable
25.	Output.tfrecord should be in /tmp/mediapipe



Note:

When you get the error
./bazel-bin/mediapipe/examples/desktop/youtube8m/extract_yt8m_features: error while loading shared libraries: libopencv_core.so.4.1: cannot open shared object file: No such file or director

1. Find the folder containing the shared library libopencv_core.so.3.2 using the following command line.
sudo find / -name "libopencv_core.so.3.2*"
Then I got the result: /usr/local/lib/libopencv_core.so.3.2.
2. Create a file called /etc/ld.so.conf.d/opencv.conf and write to it the path to the folder where the binary is stored.For example, I wrote /usr/local/lib/ to my opencv.conf file.
3. Run the command line as follows.
    sudo ldconfig -v


sudo find / -name "libopencv_core.so.4.1*"
cd /etc/ld.so.conf.d/
sudo touch opencv.conf
sudo vi opencv.conf(in the script add /usr/local/lib/ and save)
sudo ldconfig -v
